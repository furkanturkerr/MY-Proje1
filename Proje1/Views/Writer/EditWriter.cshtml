@model Entity.Concrete.Writer

@{
    Layout = "_adminlayouts";
}

<br/>
<h2>Yazar Düzenleme Sayfası</h2>
@using (@Html.BeginForm("EditWriter", "Writer", FormMethod.Post))
{
    <div class="form-group">
        @Html.HiddenFor(x => x.WriterId)
        
        @Html.Label("Yazar Adı")
        @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterName)
        <br/>
        @Html.Label("Yazar Soyadı")
        @Html.TextBoxFor(x => x.WriterSurname, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterSurname)
        <br/>
        @Html.Label("Hakkında")
        @Html.TextBoxFor(x => x.WriterAbaut, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterAbaut)
        <br/>
        @Html.Label("Ünvan")
        @Html.TextBoxFor(x => x.WriterTitle, new { @class = "form-control" })
        @Html.ValidationMessageFor(x=>x.WriterTitle)
        <br/>
        @Html.Label("Yazar E-Posta")
        @Html.TextBoxFor(x => x.WriterEmail, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterEmail)
        <br/>
        @Html.Label("Yazar Şifresi")
        @Html.TextBoxFor(x => x.WriterPassword, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterPassword)
        <br/>
        @Html.Label("Yazar Görsel Yolu")
        @Html.TextBoxFor(x => x.WriterImage, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterImage)
        <br/>
        <button class="btn btn-success">Güncelle</button>
    </div>
}